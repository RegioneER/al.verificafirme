//------------------------------------------------------------------------------
// <auto-generated>
//     Codice generato da un modello.
//
//     Le modifiche manuali a questo file potrebbero causare un comportamento imprevisto dell'applicazione.
//     Se il codice viene rigenerato, le modifiche manuali al file verranno sovrascritte.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VerificaFirme.Db
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VerificaFirmeEntities : DbContext
    {
        public VerificaFirmeEntities()
            : base("name=VerificaFirmeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CategorieEsclusione> CategorieEsclusione { get; set; }
        public virtual DbSet<CategorieSanabilita> CategorieSanabilita { get; set; }
        public virtual DbSet<Comuni> Comuni { get; set; }
        public virtual DbSet<Modulo> Modulo { get; set; }
        public virtual DbSet<ModuloNominativo> ModuloNominativo { get; set; }
        public virtual DbSet<ModuloNominativoLog> ModuloNominativoLog { get; set; }
        public virtual DbSet<Parametri> Parametri { get; set; }
        public virtual DbSet<Procedimento> Procedimento { get; set; }
        public virtual DbSet<ProcedimentoPostazione> ProcedimentoPostazione { get; set; }
        public virtual DbSet<Profilo> Profilo { get; set; }
        public virtual DbSet<Province> Province { get; set; }
        public virtual DbSet<Regioni> Regioni { get; set; }
        public virtual DbSet<Stato> Stato { get; set; }
        public virtual DbSet<Utente> Utente { get; set; }
        public virtual DbSet<UtenteProfilo> UtenteProfilo { get; set; }
        public virtual DbSet<vvComune> vvComune { get; set; }
        public virtual DbSet<vvProvincia> vvProvincia { get; set; }
    
        public virtual int Procedimento_Elimina(Nullable<int> idProcedimento)
        {
            var idProcedimentoParameter = idProcedimento.HasValue ?
                new ObjectParameter("IdProcedimento", idProcedimento) :
                new ObjectParameter("IdProcedimento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procedimento_Elimina", idProcedimentoParameter);
        }
    
        public virtual ObjectResult<Report_NominativiDuplicatiPerProcedimento_Result> Report_NominativiDuplicatiPerProcedimento(Nullable<int> idProcedimento, string codComuneNascita, string codComuneListaElettorale, Nullable<bool> ancheEsclusi)
        {
            var idProcedimentoParameter = idProcedimento.HasValue ?
                new ObjectParameter("IdProcedimento", idProcedimento) :
                new ObjectParameter("IdProcedimento", typeof(int));
    
            var codComuneNascitaParameter = codComuneNascita != null ?
                new ObjectParameter("CodComuneNascita", codComuneNascita) :
                new ObjectParameter("CodComuneNascita", typeof(string));
    
            var codComuneListaElettoraleParameter = codComuneListaElettorale != null ?
                new ObjectParameter("CodComuneListaElettorale", codComuneListaElettorale) :
                new ObjectParameter("CodComuneListaElettorale", typeof(string));
    
            var ancheEsclusiParameter = ancheEsclusi.HasValue ?
                new ObjectParameter("AncheEsclusi", ancheEsclusi) :
                new ObjectParameter("AncheEsclusi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_NominativiDuplicatiPerProcedimento_Result>("Report_NominativiDuplicatiPerProcedimento", idProcedimentoParameter, codComuneNascitaParameter, codComuneListaElettoraleParameter, ancheEsclusiParameter);
        }
    
        public virtual ObjectResult<Report_RiepilogoDataEntry_Result> Report_RiepilogoDataEntry(Nullable<int> idProcedimento, Nullable<int> tipoRaggruppamento)
        {
            var idProcedimentoParameter = idProcedimento.HasValue ?
                new ObjectParameter("IdProcedimento", idProcedimento) :
                new ObjectParameter("IdProcedimento", typeof(int));
    
            var tipoRaggruppamentoParameter = tipoRaggruppamento.HasValue ?
                new ObjectParameter("TipoRaggruppamento", tipoRaggruppamento) :
                new ObjectParameter("TipoRaggruppamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_RiepilogoDataEntry_Result>("Report_RiepilogoDataEntry", idProcedimentoParameter, tipoRaggruppamentoParameter);
        }
    
        public virtual ObjectResult<Report_VerificaMinori_Result> Report_VerificaMinori(Nullable<int> idProcedimento, Nullable<System.DateTime> dataRiferimento)
        {
            var idProcedimentoParameter = idProcedimento.HasValue ?
                new ObjectParameter("IdProcedimento", idProcedimento) :
                new ObjectParameter("IdProcedimento", typeof(int));
    
            var dataRiferimentoParameter = dataRiferimento.HasValue ?
                new ObjectParameter("DataRiferimento", dataRiferimento) :
                new ObjectParameter("DataRiferimento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_VerificaMinori_Result>("Report_VerificaMinori", idProcedimentoParameter, dataRiferimentoParameter);
        }
    }
}
