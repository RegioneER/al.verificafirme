@using System.Configuration
@using RER.Tools.MVC.Agid
@using VerificaFirme.WebUI
@using VerificaFirme.WebUI.Helper

<!DOCTYPE html>
@{
    bool isTest = false;
    bool.TryParse(ConfigurationManager.AppSettings["IsTestEnvironment"], out isTest);
    string strTest = string.Format(isTest ? " TEST" : string.Empty);
    string nomeApplicazione = string.Format("{0} {1}", ViewBag.NomeApplicativo, strTest);
}
<html lang="it">
<head id="Head1">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>
        @nomeApplicazione - @ViewBag.Title
    </title>

    @{
        var tmp_base = string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority.Replace(":" + Request.Url.Port, ""), Url.Content("~"));
        tmp_base = tmp_base.Remove(tmp_base.LastIndexOf("/"));
        var siteName = tmp_base.Substring(tmp_base.LastIndexOf("/"));
    }

    <meta name="description" content="@nomeApplicazione -  @ViewBag.Title">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link href="~/bootstrapitalia/css/bootstrap-italia.min.css" rel="stylesheet" />


    <link href="~/Fontawesome/css/fontawesome.css" rel="stylesheet">
    <link href="~/Fontawesome/css/brands.css" rel="stylesheet">
    <link href="~/Fontawesome/css/solid.css" rel="stylesheet">
    <script defer src="~/Fontawesome/js/brands.js"></script>
    <script defer src="~/Fontawesome/js/solid.js"></script>
    <script defer src="~/Fontawesome/js/fontawesome.js"></script>


    <script src="~/Scripts/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {

            HTMLInputElement.prototype.scrollIntoView = function (a) {
                this.scrollIntoViewIfNeeded();
            }
            HTMLSelectElement.prototype.scrollIntoView = function (a) {
                this.scrollIntoViewIfNeeded();
            }
            HTMLAreaElement.prototype.scrollIntoView = function (a) {
                this.scrollIntoViewIfNeeded();
            }

            var displayAlert = function () {
                if (typeof Page_Validators == 'undefined') return;

                var groups = [];
                for (i = 0; i < Page_Validators.length; i++)
                    if (!Page_Validators[i].isvalid) {
                        if (!groups[Page_Validators[i].validationGroup]) {
                            ValidationSummaryOnSubmit(Page_Validators[i].validationGroup);
                            groups[Page_Validators[i].validationGroup] = true;
                        }
                    }
            };

            displayAlert();
        });

        function SetOverlay(showOverlay, overlayID) {
            var _id = '#overlay';
            if (overlayID)
                _id = '#' + overlayID;

            if (showOverlay == true) {
                jQuery(_id).fadeIn();
                jQuery(_id).focus();
            }
            else {
                jQuery(_id).fadeOut();
                $('.modal-backdrop').hide()
            }
        };

        function errorFunc(jqXHR, exception) {
            var msg = '';
            if (jqXHR.status === 0) {
                msg = 'Not connect.\n Verify Network.';
            } else if (jqXHR.status == 404) {
                msg = 'Requested page not found. [404]';
            } else if (jqXHR.status == 500) {
                msg = 'Internal Server Error [500].';
            } else if (exception === 'parsererror') {
                msg = 'Requested JSON parse failed.';
            } else if (exception === 'timeout') {
                msg = 'Time out error.';
            } else if (exception === 'abort') {
                msg = 'Ajax request aborted.';
            } else {
                msg = 'Uncaught Error.\n' + jqXHR.responseText;
            }
            SetOverlay(false);
            alert(msg);
        }


        function validateForm(e) {
            var form = e[0].parentNode;

            while (true) {
                if (form.nodeName.toLowerCase() != 'form')
                    form = form.parentNode;
                else
                    break;
            }


            var validator = $(form).validate();
            var valid = $(form).valid();


            if ($('#validationSummary').length == 1) {
                if (!valid) $('#validationSummary').show();
                else $('#validationSummary').hide();
            }
            else if ($("div.alert.alert-dismissible").length == 1) {
                //trasformo il messaggio Operazione riuscita (relativo ad un'azione precedente) con il messaggio di errore
                if ($('div.alert.alert-success') != null) {
                    $('div.alert.alert-success').removeClass("alert-success").addClass("alert-danger");
                    $('.alert-heading').text('Errore di validazione');
                    $('div.alert.alert-dismissible ul').empty();
                }

                // ciclo tutti glie rrori di validazione
                for (i = 0; i < validator.errorList.length; i++) {
                    // aggiungo l'errore solo se non è già presente
                    if ($("div.alert.alert-dismissible ul li:contains(" + validator.errorList[i].message + ")").length == 0) {
                        // creo il nuovo elemento e lo aggiungo alla lista esistente
                        var $newLi = $("<li>" + validator.errorList[i].message + "</li>")
                        $a = $("div.alert.alert-dismissible ul").append($newLi);
                    }
                }
            }
            return valid;
        };

        // validation summary e spinner
        $(document).ready(function () {
            $('button[type="submit"]:not(".nospinner"), .spinner').bind({
                click: function () {
                    var valid = validateForm($(this));
                    if (valid === true) {
                        SetOverlay(true);
                    }
                }
            });
        });

    </script>
    @RenderSection("scripts", required: false)
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
</head>
@{
    VerificaFirme.Db.RERIAMPrincipal utente = null;
    try
    {
        utente = VerificaFirme.Db.RERIAMPrincipal.Corrente;
    }
    catch (Exception)
    {

    }
}
<body>
    <a id="skip-to-content" class="sr-only sr-only-focusable" href="#content">
        <span class="skiplink-text">salta al contenuto</span>
    </a>
    <a id="skip-to-message" class="sr-only sr-only-focusable" href="#esitoOperazione">
        <span class="skiplink-text">salta a esito operazione</span>
    </a>

    <header class="it-header-wrapper">
        <div class="it-nav-wrapper">
            <div class="it-header-center-wrapper">
                <div class="container">
                    <div class="row">
                        <div class="col-12">
                            <div class="it-header-center-content-wrapper">
                                <div class="it-brand-wrapper">
                                    <a href="@Url.Action("NavigaMenu", "Base", new {  a = "Index", c = "Home" })">
                                        <svg class="icon" aria-hidden="true">
                                            <use href="~/bootstrapitalia/svg/sprite.svg#it-pa"></use>
                                        </svg>
                                        <div class="it-brand-text">
                                            <div class="it-brand-title">@ViewBag.NomeRegione</div>
                                        </div>
                                    </a>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="it-header-navbar-wrapper">
                <div class="container">
                    <div class="row">
                        <div class="col-12">
                            <!--start nav-->
                            <nav class="navbar navbar-expand-lg has-megamenu" aria-label="Navigazione principale">
                                <button class="custom-navbar-toggler" type="button" aria-controls="navC1" aria-expanded="false" aria-label="Mostra/Nascondi la navigazione" data-target="#navC1">
                                    <svg class="icon">
                                        <use href="~/bootstrapitalia/svg/sprite.svg#it-burger"></use>
                                    </svg>
                                </button>
                                <div class="navbar-collapsable" id="navC1" style="display: none;">
                                    <div class="overlay" style="display: none;"></div>
                                    <div class="close-div">
                                        <button class="btn close-menu" type="button">
                                            <span class="sr-only">Nascondi la navigazione</span>
                                            <svg class="icon">
                                                <use href="~/bootstrapitalia/svg/sprite.svg#it-close-big"></use>
                                            </svg>
                                        </button>
                                    </div>
                                    <div class="menu-wrapper">
                                        <ul class="navbar-nav">

                                            <li class="nav-item"><a class="nav-link" href="@Url.Action("NavigaMenu", "Base", new {  a = "Index", c = "Home" })" title="Home"><span><i class="fas fa-home"></i> Home</span></a></li>
                                            @if (utente.IsInRole(VerificaFirme.Db.RuoloUtente.Amministatore))
                                            {
                                                <li class="nav-item dropdown">
                                                    <a class="nav-link dropdown-toggle" href="#" data-toggle="dropdown" aria-expanded="false" id="dropdownMenuLinkRichieste">
                                                        <span><i class="fas fa-cog"></i> Configurazione procedimenti</span>
                                                        <svg class="icon icon-xs">
                                                            <use href="~/Images/sprite.svg#it-expand"></use>
                                                        </svg>
                                                    </a>
                                                    <div class="dropdown-menu" role="region" aria-labelledby="dropdownMenuLinkRichieste">
                                                        <div class="link-list-wrapper">
                                                            <ul class="link-list">
                                                                <li><a class="list-item" href="@Url.Action("NavigaMenu", "Base", new { a = "Cerca", c = "Procedimento" })"><span><i class="fas fa-search"></i> Ricerca procedimenti</span></a></li>
                                                                <li><a class="list-item" href="@Url.Action("NavigaMenu", "Base", new { a = "Crea", c = "Procedimento" })"><span><i class="fas fa-plus"></i> Nuovo procedimento</span></a></li>
                                                                <li><a class="list-item" href="@Url.Action("NavigaMenu", "Base", new { a = "AbilitazioneUtenti", c = "Procedimento" })"><span><i class="fas fa-user-edit"></i> Abilitazioni utente</span></a></li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </li>
                                            }
                                            <li class="nav-item"><a class="nav-link" href="@Url.Action("NavigaMenu", "Base", new {  a = "Index", c = "Modulo" })" title="Home"><span><i class="fas fa-clipboard-list"></i> Data Entry</span></a></li>
                                            @if (utente.IsInRole(VerificaFirme.Db.RuoloUtente.Amministatore) || utente.IsInRole(VerificaFirme.Db.RuoloUtente.Supervisore))
                                            {
                                                <li class="nav-item"><a class="nav-link" href="@Url.Action("NavigaMenu", "Base", new {  a = "Index", c = "ControlloAmministrativo" })" title="Controllo amministrativo"><span><i class="fas fa-clipboard-check"></i> Controllo amministrativo</span></a></li>
                                                <li class="nav-item"><a class="nav-link" href="@Url.Action("NavigaMenu", "Base", new {  a = "Index", c = "Report" })" title="Verifiche"><span><i class="far fa-file-alt"></i> Verifiche</span></a></li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <nav class="casetta" aria-label="sei qui:">
            <ul class="breadcrumb light mx-auto">
                <li id="breadcrumbs-home" class="breadcrumb-item">
                    <a id="breadcrumbs-homelink" href="@Url.Action("NavigaMenu", "Base", new {  a = "Index", c = "Home" })" title="Home page"><span class="fas fa-home"></span><span class="sr-only">Home page</span></a>
                </li>
                @Html.Raw(Html.BuildAgidBreadcrumbNavigationFirmeSessione("", (int?)ViewBag.IdModulo, (int?)ViewBag.IdProcedimento, true))

            </ul>

        </nav>
        @{
            string Nome = "";
            string Cognome = "";
            string user = "";
            if (utente != null)
            {
                Nome = utente.Nome;
                Cognome = utente.Cognome;
                user = utente.Username;
            }
        }
    </header>
    <div id="content" class="container-fluid">
        <div id="overlay" style="display:none">
            <div class="modal fade show" id="overlayModal" tabindex="-1" role="dialog" aria-hidden="false" style="display: block;">
                <div class="modal-dialog modal-dialog-centered modal-sm" role="document">
                    <div class="modal-content  rounded">
                        <div class="modal-body mb-3">
                            <h5><i class="fas fa-spinner fa-spin mr-2"></i>Attendere... </h5>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-backdrop fade show"></div>
        </div>
        <div>
            <h1>@ViewBag.Title</h1>
        </div>
        @RenderBody()
    </div>
    <br>
    <footer class="it-footer">
        <div class="it-footer-main">
            <div class="container">
                <div class="row clearfix">
                    <div class="col-sm-12">
                        <div class="it-brand-wrapper">
                            <div class="d-flex">
                                @if (isTest)
                                {
                                    <div class="p-2">
                                        Ambiente di test
                                    </div>
                                }
                                <div class="ml-auto p-2">
                                    @if (utente != null)
                                    {
                                        string infoUtenza = string.Format("{0} ({1})", utente.Cognome, utente.AbilitazioniCorrente.Profilo.Descrizione);
                                        <i class="fas fa-user-circle"></i> @infoUtenza
                                    }
                                </div>
                                <div class="p-2">
                                    <a href="@Url.Action("Esci","Home")" onclick="LogOut()" title="Log-out"><i class="fas fa-sign-out-alt"></i>&nbsp;Esci</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script>window.__PUBLIC_PATH__ = '@string.Format("{0}bootstrapitalia/fonts", Url.Content("~"))'</script>
    <script src="~/bootstrapitalia/js/bootstrap-italia.bundle.min.js"></script>
    <script defer src="~/Fontawesome/js/all.js"></script>
    <script defer src="~/Fontawesome/js/v4-shims.js"></script>


    <script defer src="~/Scripts/jquery.validate.js"></script>
    <script defer src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script>
        function LogOut() {
            sessionStorage.clear();
        }
    </script>
    @Html.Partial("_partialScripts")

</body>
</html>
